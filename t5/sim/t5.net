*Bandpass filter using OP-AMP
* To use a subcircuit, the name must begin with 'X'.  For example:
* X1 1 2 3 4 5 uA741
*
* connections:   non-inverting input
*                |  inverting input
*                |  |  positive power supply
*                |  |  |  negative power supply
*                |  |  |  |  output
*                |  |  |  |  |
.subckt uA741    1  2  3  4  5
*
  c1   11 12 8.661E-12
  c2    6  7 30.00E-12
  dc    5 53 dx
  de   54  5 dx
  dlp  90 91 dx
  dln  92 90 dx
  dp    4  3 dx
  egnd 99  0 poly(2) (3,0) (4,0) 0 .5 .5
  fb    7 99 poly(5) vb vc ve vlp vln 0 10.61E6 -10E6 10E6 10E6 -10E6
  ga    6  0 11 12 188.5E-6
  gcm   0  6 10 99 5.961E-9
  iee  10  4 dc 15.16E-6
  hlim 90  0 vlim 1K
  q1   11  2 13 qx
  q2   12  1 14 qx
  r2    6  9 100.0E3
  rc1   3 11 5.305E3
  rc2   3 12 5.305E3
  re1  13 10 1.836E3
  re2  14 10 1.836E3
  ree  10 99 13.19E6
  ro1   8  5 50
  ro2   7 99 100
  rp    3  4 18.16E3
  vb    9  0 dc 0
  vc    3 53 dc 1
  ve   54  4 dc 1
  vlim  7  8 dc 0
  vlp  91  0 dc 40
  vln   0 92 dc 40
.model dx D(Is=800.0E-18 Rs=1)
.model qx NPN(Is=800.0E-18 Bf=93.75)
.ends



.options savecurrents

Vcc vcc 0 10.0
Vee vee 0 -10.0
Vin in 0 0 ac 1.0 sin(0 113m 1k)
*Vin in 0 0 ac 1.0 sin(0 10m 1k)

X1 3 2 vcc vee 6 uA741



*Inverting terminal
C1 in 3 220n
R1 3 0 1k


*Non-Inverting terminal
R3 2 6 100k
R4 2 0 1k
R4p 2 0 1k

*after op-amp
R2 6 out 1k
R2p 6 out 1k
C2 out 0 220n


* load
*RL out 0 1

.op
.end

.control

*makes plots in color
set hcopypscolor=0
set color0=white
set color1=black
set color2=red
set color3=blue
set color4=violet
set color5=rgb:3/8/0
set color6=rgb:4/0/0




*input impedance in kohm
*print v(in)[40]/R1[i]/1000

op

echo "********************************************"
echo  "Operating point"
echo "********************************************"

echo  "op_TAB"
print all
echo  "op_END"


* time analysis
tran 1e-5 10e-2 9e-2
hardcopy vo1.ps v(out)
echo vo1_FIG

* frequency analysis
ac dec 10 10 100MEG
*hardcopy vo1f.ps vdb(out) vdb(in)
*echo vo1f_FIG

hardcopy vo2f.ps vdb(out)
echo vo2f_FIG
let gain = db(v(out)/v(in))
hardcopy gain.ps gain
echo gain_FIG

let gainlinear = v(out)/v(in)

let inzimpedance = v(in)[40]/vin#branch[40]*(-1)

meas ac maxout MAX vdb(out) from=1000 to=100000
let allin=maxout-3
*let fall=v(out)/-v(in2)
meas ac lowfrequence WHEN vdb(out)=allin RISE=1
meas ac highfrequence WHEN vdb(out)=allin FALL=1
meas ac gainfinal MAX gain from=1000 to=100000
*let centerfrequency=lowfrequence+(highfrequence-lowfrequence)/2
let centerfrequency=sqrt(lowfrequence*highfrequence)

meas ac gainfinallinear MAX gainlinear from=1000 to=100000

echo "valsim_TAB"
print lowfrequence
print highfrequence
print centerfrequency
print gainfinal
echo "valsim_END"


let valcap = (220+220)/1000
let valresis = 1+1+1+100+1+1
let cost = 22*0.1+valcap*1+valresis*1
let centraldevi=abs(1000-centerfrequency)
let gaindevi=abs(40-gainfinal)
*let gaindevi=abs(100-gainfinallinear)
let merit = 1/(cost*gaindevi*centraldevi)

print cost > info.tex
print gainfinal >> info.tex
print gainfinallinear >> info.tex
print gaindevi >> info.tex
print centraldevi >> info.tex

echo "merit_TAB"
print cost
print merit
echo "merit_END"

print inzimpedance > impedances.tex

.endc 

